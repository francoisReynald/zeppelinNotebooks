{"paragraphs":[{"text":"%md\n# About\n**Objective:** Become familiar with running K-Nearest Neighbors on Spark\n**File locations:** spark-labs/weatherAUS.csv\n**Successful outcome:** Calculate the nearest neighbors to predict if it will rain tomorrow\n**Before you begin:**\n**Related lessons:** Supervised learning, K-Nearest Neighbors\n\n---","user":"admin","dateUpdated":"2019-04-10T08:47:04+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557702_1771971262","id":"20171105-200834_1116095891","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:04+0000","dateFinished":"2019-04-10T08:47:04+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:143347"},{"text":"%md\n# Setup\n---","user":"admin","dateUpdated":"2019-04-10T08:47:04+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557703_1351281650","id":"20181114-164229_902436001","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:05+0000","dateFinished":"2019-04-10T08:47:05+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143348"},{"title":"Retrieve the data from internet and store it in HDFS","text":"%sh\n\nrm -f weatherAUS.csv\nwget -nc -P /home/zeppelin https://s3-us-west-1.amazonaws.com/sci-241/rattle-togaware-weather/weatherAUS.csv\nhdfs dfs -rm spark-labs/weatherAUS.csv\nhdfs dfs -put weatherAUS.csv spark-labs/","user":"admin","dateUpdated":"2019-04-10T08:47:05+0000","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557703_-1606717346","id":"20181121-092909_1324039313","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:05+0000","dateFinished":"2019-04-10T08:47:12+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143349"},{"title":"Import libraries","text":"%pyspark\n\nfrom pyspark.sql.functions import udf, monotonically_increasing_id\nfrom pyspark.sql.types import ArrayType, FloatType\nfrom pyspark.sql.functions import col\nfrom pyspark.ml.feature import VectorAssembler, StringIndexer\nfrom pyspark.sql.window import Window\nfrom pyspark.sql.functions import row_number\nfrom pyspark.sql.functions import mean, round\nfrom pyspark.ml.evaluation import MulticlassClassificationEvaluator as MCE","user":"admin","dateUpdated":"2019-04-10T08:47:12+0000","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557704_-1139321627","id":"20181114-164621_138379904","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:12+0000","dateFinished":"2019-04-10T08:47:12+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143350"},{"text":"%md\n# Lab\n---","user":"admin","dateUpdated":"2019-04-10T08:47:12+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557704_1624557013","id":"20181114-164844_1661453681","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:12+0000","dateFinished":"2019-04-10T08:47:12+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143351"},{"text":"%md\n## Load and inspect the data","user":"admin","dateUpdated":"2019-04-10T08:47:12+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557704_347488815","id":"20181120-105601_996869670","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:12+0000","dateFinished":"2019-04-10T08:47:12+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143352"},{"text":"%md\nFirst we need to load the data into a dataframe using the 'header' and 'inferSchema' options.","user":"admin","dateUpdated":"2019-04-10T08:47:12+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557704_-63704725","id":"20181120-104302_1071736728","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:12+0000","dateFinished":"2019-04-10T08:47:12+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143353"},{"title":"1 - Load the data into a Spark DataFrame","text":"","user":"admin","dateUpdated":"2019-04-10T08:47:12+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557704_1459706453","id":"20171105-200623_656362182","dateCreated":"2019-01-25T10:29:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143354"},{"text":"%md\nWhen doing machine learning, it is important to look at the data you are working with\nUse z.show(data) to view the first 20 rows of your data","user":"admin","dateUpdated":"2019-04-10T08:47:12+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557704_1756276603","id":"20171105-201923_413365117","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:13+0000","dateFinished":"2019-04-10T08:47:13+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143355"},{"title":"2 - Inspect the data","text":"","user":"admin","dateUpdated":"2019-04-10T08:47:13+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557704_-1151072310","id":"20171105-201709_849284875","dateCreated":"2019-01-25T10:29:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143356"},{"text":"%md\n## Transform the DataFrame into one usable by Spark ML\n\nSpark contains many helper functions, like StringIndexer to convert categorical variables to numerical ones.\nWe will define a function process_data that does all this, and then assembles the data for us.","user":"admin","dateUpdated":"2019-04-10T08:47:13+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557705_-1194015950","id":"20171105-201449_1118165660","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:13+0000","dateFinished":"2019-04-10T08:47:13+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143357"},{"text":"%md\n\nCopy and paste the code below in the next paragraph\n~~~\ndef process_data(data):    \n    non_null = data.na.drop(how=\"any\")\n    indexer = StringIndexer(inputCol = 'WindGustDir',outputCol = 'WindGustDir_indexed')\n    indexed1 = indexer.fit(non_null).transform(non_null)\n    indexer = StringIndexer(inputCol = 'WindDir9am', outputCol = 'WindDir9am_indexed')\n    indexed2 = indexer.fit(indexed1).transform(indexed1)\n    indexer = StringIndexer(inputCol = 'WindDir3pm', outputCol = 'WindDir3pm_indexed')\n    indexed3 = indexer.fit(indexed2).transform(indexed2)\n    \n    indexed = indexed3.drop('WindGustDir','WindDir9am','WindDir3pm')\n    \n    feature_columns = list(filter(lambda x: 'Temp' in x or 'WindGust' in x or '9am' in x or '3pm' in x,indexed.columns))\n\n    assembler = VectorAssembler(inputCols=feature_columns, outputCol=\"features\")\n\n    # Transform the data into a form useable by SParkML\n    vectorized = assembler.transform(indexed)\n    indexer = StringIndexer(inputCol = \"RainTomorrow\", outputCol = 'label')\n    labeled  = indexer.fit(vectorized).transform(vectorized)\n    return labeled\n~~~\n\n","user":"admin","dateUpdated":"2019-04-10T08:47:13+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557705_1981661266","id":"20181120-105834_455616424","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:13+0000","dateFinished":"2019-04-10T08:47:13+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143358"},{"title":"3 - Create the process_data function","text":"","user":"admin","dateUpdated":"2019-04-10T08:47:13+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557705_-289916439","id":"20181120-105833_534068450","dateCreated":"2019-01-25T10:29:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143359"},{"text":"%md\n\nIn the next cell, call process_data on the data we read in.","user":"admin","dateUpdated":"2019-04-10T08:47:13+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557705_-69723798","id":"20181121-095645_987622514","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:13+0000","dateFinished":"2019-04-10T08:47:13+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143360"},{"title":"4 - Call the process_data on our data","text":"","user":"admin","dateUpdated":"2019-04-10T08:47:13+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"id":"string","date":"string","price":"string","bedrooms":"string","bathrooms":"string","sqft_living":"string","sqft_lot":"string","floors":"string","waterfront":"string","view":"string","condition":"string","grade":"string","sqft_above":"string","sqft_basement":"string","yr_built":"string","yr_renovated":"string","zipcode":"string","lat":"string","long":"string","sqft_living15":"string","sqft_lot15":"string","features":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557705_881395098","id":"20181120-112316_2086924427","dateCreated":"2019-01-25T10:29:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143361"},{"text":"%md\nWe are going to be using the cosine distance to determine the nearest neighbors.\nPart of this measurement requires to know the magnitude, or norm of the vector.\nTo save time, we will calculate this once for each row.\nCopy and paste the code below in the next paragraph.\n\n~~~\ndef get_norm(v):\n  return float(v.norm(2))\n\nget_norm_udf = udf(get_norm, FloatType())\ncleaned_data = cleaned_data.withColumn('norm', get_norm_udf('features')).withColumn('id', monotonically_increasing_id())\nz.show(cleaned_data.select('id','norm'))\n~~~","user":"admin","dateUpdated":"2019-04-10T08:47:13+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557705_1162054022","id":"20181123-134036_1250580450","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:13+0000","dateFinished":"2019-04-10T08:47:13+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143362"},{"title":"5 - Calculate the norm","text":"\n","user":"admin","dateUpdated":"2019-04-10T08:47:14+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557705_-705220646","id":"20181123-135118_984588400","dateCreated":"2019-01-25T10:29:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143363"},{"title":"6 - Show the label and features columns","text":"","user":"admin","dateUpdated":"2019-04-10T08:47:14+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"label":"string","features":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557705_1872040699","id":"20181121-103142_733725590","dateCreated":"2019-01-25T10:29:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143364"},{"text":"%md\nThis is the data that we will feed to our machine learning algorithm.","user":"admin","dateUpdated":"2019-04-10T08:47:14+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557706_885564456","id":"20181120-114756_1372220167","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:14+0000","dateFinished":"2019-04-10T08:47:14+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143365"},{"text":"%md\n## Train a model","user":"admin","dateUpdated":"2019-04-10T08:47:14+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557706_-52948905","id":"20181120-142217_940991033","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:14+0000","dateFinished":"2019-04-10T08:47:14+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143366"},{"text":"%md\nNext we need to split this data between a training and a testing set.\nWe will keep \n* 99.98 % of the rows for training and save the other 0.02% for testing on and\n* use a seed of 228 that will help everyone in the class have similar results.\n\nAny larger test set and we could not complete the lab in a reasonable time\n","user":"admin","dateUpdated":"2019-04-10T08:47:14+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557706_2146773110","id":"20181120-142338_951640488","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:14+0000","dateFinished":"2019-04-10T08:47:14+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143367"},{"title":"7 - Split the data into training and test instances","text":"","user":"admin","dateUpdated":"2019-04-10T08:47:14+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557706_1486913674","id":"20181120-142341_921909094","dateCreated":"2019-01-25T10:29:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143368"},{"text":"%md\n\nThe cartesian product will give us one row for each pair of training and test set instance\nTo keep the columns separate in each row, type the following to rename the columns\n\n~~~\nreplacements_train = {c:c + '_train' for c in train.columns}\nreplacements_test = {c:c + '_test' for c in test.columns}\n\ntrain = train.select([col(c).alias(replacements_train.get(c, c)) for c in train.columns])\ntest = test.select([col(c).alias(replacements_test.get(c, c)) for c in test.columns])\n\ntrain.printSchema()\ntest.printSchema()\n~~~","user":"admin","dateUpdated":"2019-04-10T08:47:14+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557706_55153184","id":"20181123-141422_2107454793","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:14+0000","dateFinished":"2019-04-10T08:47:14+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143369"},{"title":"8 - Rename the columns of the training and test sets","text":"","user":"admin","dateUpdated":"2019-04-10T08:47:14+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557706_2123982807","id":"20181120-145510_996717762","dateCreated":"2019-01-25T10:29:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143370"},{"text":"%md\nType the code below to calculate the cartesian product and give each row a unique ID\n~~~\ncartesian = train.crossJoin(test).cache()\ncartesian =  cartesian.withColumn('joint_id',monotonically_increasing_id())\n~~~\n","user":"admin","dateUpdated":"2019-04-10T08:47:14+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557706_-44357477","id":"20181123-142956_1568912516","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:15+0000","dateFinished":"2019-04-10T08:47:15+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143371"},{"title":"9 - Calculate the cartesian product","text":"","user":"admin","dateUpdated":"2019-04-10T08:47:15+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557707_-1440049628","id":"20181120-145719_1439294915","dateCreated":"2019-01-25T10:29:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143372"},{"text":"%md\n\nRun the following code in the next paragraph\n~~~\nscored = cartesian.join(\n    cartesian.rdd.map(lambda x: (float(x['features_train'].dot(x['features_test'])/(x['norm_train'] * x['norm_test'])),x['joint_id'] )).toDF().withColumnRenamed('_2',\"joint_id\"),\n    on = 'joint_id'\n)\n~~~\n\n\nThis performs the distance calculate for each row in the cartesian product and then adds the information as a column to the data\nIt may take a minute or two to run\n","user":"admin","dateUpdated":"2019-04-10T08:47:15+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557707_-1053900162","id":"20181120-150049_1309747784","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:15+0000","dateFinished":"2019-04-10T08:47:15+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143373"},{"title":"10 - Calculate the distance between each pair of training and test instances","text":"","user":"admin","dateUpdated":"2019-04-10T08:47:15+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557707_-397547288","id":"20181120-145938_1249353348","dateCreated":"2019-01-25T10:29:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143374"},{"text":"%md\nFor each point in the test set let us find the K-closest points in the training data.\nFor this, we need a window object that we can use to work on sections of the data\n~~~\nwindow = Window.partitionBy(scored['id_test']).orderBy(scored['_1'].desc())\nK = 5\nk_nearest = scored.select(col('*'), row_number().over(window).alias('row_number')).where(col('row_number') <= K)\n~~~\n","user":"admin","dateUpdated":"2019-04-10T08:47:15+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557707_-323698725","id":"20181123-151345_387481885","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:15+0000","dateFinished":"2019-04-10T08:47:15+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143375"},{"title":"11 - Remove all but the top K pairs for each point in the test set","text":"\n","user":"admin","dateUpdated":"2019-04-10T08:47:15+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557707_-2072781793","id":"20181123-151522_1755055617","dateCreated":"2019-01-25T10:29:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143376"},{"text":"%md\nFind the mean classification of the K-nearest training points\n~~~\npredictions = k_nearest.groupby('id_test').agg(mean('label_train').alias('raw_prediction'),mean('label_test').alias('label'))\nz.show(predictions)\n~~~","user":"admin","dateUpdated":"2019-04-10T08:47:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557707_-1800052333","id":"20181123-152757_498158032","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:16+0000","dateFinished":"2019-04-10T08:47:16+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143377"},{"title":"12 - Make a prediction","text":"","user":"admin","dateUpdated":"2019-04-10T08:47:16+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"label":"string","prediction":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557707_-1079060876","id":"20181121-105040_90820119","dateCreated":"2019-01-25T10:29:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143378"},{"text":"%md\nRound the average to either 0 or 1 to get a discrete label\n~~~\npredictions = predictions.withColumn('prediction',round('raw_prediction')).cache()\n~~~","user":"admin","dateUpdated":"2019-04-10T08:47:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557707_1892796220","id":"20181123-153930_1075373668","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:16+0000","dateFinished":"2019-04-10T08:47:16+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143379"},{"title":"13 - Round the average to get a discrete label","text":"","user":"admin","dateUpdated":"2019-04-10T08:47:16+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557708_-701055461","id":"20181123-153941_409967955","dateCreated":"2019-01-25T10:29:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143380"},{"text":"%md\nCreate an MulticlassClassificationEvaluator (MCE) object and print out the F1 measure\n~~~\nevaluator = MCE()\nprint(evaluator.evaluate(predictions))\n~~~\nYou should see a value of 0.8915975158264684.\n","user":"admin","dateUpdated":"2019-04-10T08:47:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557708_-2053967606","id":"20181121-110924_1701254416","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:16+0000","dateFinished":"2019-04-10T08:47:16+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143381"},{"title":"14 - Create an MCE object and print out the F1 measure","text":"\n","user":"admin","dateUpdated":"2019-04-10T08:47:16+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557708_2038680398","id":"20181121-111227_1423491342","dateCreated":"2019-01-25T10:29:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143382"},{"title":"15 - Visualize the predictions","text":"","user":"admin","dateUpdated":"2019-04-10T08:47:16+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"scatterChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"Date":"string","Location":"string","MinTemp":"string","MaxTemp":"string","Rainfall":"string","Evaporation":"string","Sunshine":"string","WindGustSpeed":"string","WindSpeed9am":"string","WindSpeed3pm":"string","Humidity9am":"string","Humidity3pm":"string","Pressure9am":"string","Pressure3pm":"string","Cloud9am":"string","Cloud3pm":"string","Temp9am":"string","Temp3pm":"string","RainToday":"string","RISK_MM":"string","RainTomorrow":"string","WindGustDir_indexed":"string","WindDir9am_indexed":"string","WindDir3pm_indexed":"string","features":"string","label":"string","group":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"scatterChart":{"xAxis":{"name":"Humidity9am","index":10,"aggr":"sum"},"group":{"name":"prediction","index":26,"aggr":"sum"},"yAxis":{"name":"WindGustSpeed","index":7,"aggr":"sum"}},"pieChart":{}},"keys":[{"name":"Humidity9am","index":10,"aggr":"sum"}],"groups":[{"name":"WindGustSpeed","index":7,"aggr":"sum"}],"values":[{"name":"prediction","index":26,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557708_-1998929776","id":"20181121-112847_1076813012","dateCreated":"2019-01-25T10:29:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143383"},{"title":"Bonus","text":"%md\nIf you have extra time, try to improve your model.\n* Go back to step 3 and change the features used in your model\n* Go back to step 10 in the notebook and change the value of K\n* After editing that cell, run the entire notebook again by hitting the play button at the top","user":"admin","dateUpdated":"2019-04-10T08:47:17+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557708_-491884714","id":"20181120-152344_1404227962","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:17+0000","dateFinished":"2019-04-10T08:47:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143384"},{"text":"%md\n# Result\n**You have now:** You have now successfully used K-nearest neighbors and evaluated it using the F1 score.\n\n---","user":"admin","dateUpdated":"2019-04-10T08:47:17+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557708_1792616777","id":"20181119-142716_792318228","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:17+0000","dateFinished":"2019-04-10T08:47:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143385"},{"text":"%md\n# Solution\n---","user":"admin","dateUpdated":"2019-04-10T08:47:17+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557709_-1518060415","id":"20171113-155535_1769142099","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:17+0000","dateFinished":"2019-04-10T08:47:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143386"},{"title":"1 - Load the data into a Spark DataFrame","text":"%pyspark\n\ndata = spark.read.format('csv').option('header',True).option('inferSchema',True).option('nullValue',\"NA\").load('spark-labs/weatherAUS.csv')","user":"admin","dateUpdated":"2019-04-10T08:47:17+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8217","http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8218"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1548408557709_414093386","id":"20181120-104552_1855149124","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:17+0000","dateFinished":"2019-04-10T08:47:19+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143387"},{"title":"2 - Inspect the data","text":"%pyspark\n\nz.show(data)","user":"admin","dateUpdated":"2019-04-10T08:47:19+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"Date":"string","Location":"string","MinTemp":"string","MaxTemp":"string","Rainfall":"string","Evaporation":"string","Sunshine":"string","WindGustDir":"string","WindGustSpeed":"string","WindDir9am":"string","WindDir3pm":"string","WindSpeed9am":"string","WindSpeed3pm":"string","Humidity9am":"string","Humidity3pm":"string","Pressure9am":"string","Pressure3pm":"string","Cloud9am":"string","Cloud3pm":"string","Temp9am":"string","Temp3pm":"string","RainToday":"string","RISK_MM":"string","RainTomorrow":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8219"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1548408557709_17434610","id":"20181120-104909_658872","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:19+0000","dateFinished":"2019-04-10T08:47:19+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143388"},{"title":"3 - Create the process_data function","text":"%pyspark\n\ndef process_data(data):    \n    non_null = data.na.drop(how=\"any\")\n    indexer = StringIndexer(inputCol = 'WindGustDir',outputCol = 'WindGustDir_indexed')\n    indexed1 = indexer.fit(non_null).transform(non_null)\n    indexer = StringIndexer(inputCol = 'WindDir9am', outputCol = 'WindDir9am_indexed')\n    indexed2 = indexer.fit(indexed1).transform(indexed1)\n    indexer = StringIndexer(inputCol = 'WindDir3pm', outputCol = 'WindDir3pm_indexed')\n    indexed3 = indexer.fit(indexed2).transform(indexed2)\n    \n    indexed = indexed3.drop('WindGustDir','WindDir9am','WindDir3pm')\n    \n    feature_columns = list(filter(lambda x: 'Temp' in x or 'WindGust' in x or '9am' in x or '3pm' in x,indexed.columns))\n\n    assembler = VectorAssembler(inputCols=feature_columns, outputCol=\"features\")\n\n    # Transform the data into a form useable by SParkML\n    vectorized = assembler.transform(indexed)\n    indexer = StringIndexer(inputCol = \"RainTomorrow\", outputCol = 'label')\n    labeled  = indexer.fit(vectorized).transform(vectorized)\n    return labeled","user":"admin","dateUpdated":"2019-04-10T08:47:19+0000","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557712_285649674","id":"20181121-095946_1151543625","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:19+0000","dateFinished":"2019-04-10T08:47:19+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143389"},{"title":"4 - Call the process_data on our data","text":"%pyspark\n\ncleaned_data = process_data(data)","user":"admin","dateUpdated":"2019-04-10T08:47:19+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"id":"string","date":"string","price":"string","bedrooms":"string","bathrooms":"string","sqft_living":"string","sqft_lot":"string","floors":"string","waterfront":"string","view":"string","condition":"string","grade":"string","sqft_above":"string","sqft_basement":"string","yr_built":"string","yr_renovated":"string","zipcode":"string","lat":"string","long":"string","sqft_living15":"string","sqft_lot15":"string","features":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8220","http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8221","http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8222","http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8223"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1548408557712_-962538237","id":"20181121-103252_98019230","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:19+0000","dateFinished":"2019-04-10T08:47:25+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143390"},{"title":"5 - Calculate the norm","text":"%pyspark\n\ndef get_norm(v):\n  return float(v.norm(2))\n\nget_norm_udf = udf(get_norm, FloatType())\ncleaned_data = cleaned_data.withColumn('norm', get_norm_udf('features')).withColumn('id', monotonically_increasing_id())\nz.show(cleaned_data.select('id','norm'))\n","user":"admin","dateUpdated":"2019-04-10T08:47:25+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"id":"string","norm":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8224"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1548408557712_581940132","id":"20181123-135435_1018088822","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:25+0000","dateFinished":"2019-04-10T08:47:26+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143391"},{"title":"6 - Show the label and features columns","text":"%pyspark\n\nz.show(cleaned_data.select('label','features'))","user":"admin","dateUpdated":"2019-04-10T08:47:26+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"label":"string","features":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8225"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1548408557713_498917218","id":"20181121-102959_839674579","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:27+0000","dateFinished":"2019-04-10T08:47:27+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143392"},{"title":"7 - Split the data into training and test instances","text":"%pyspark\n\ntrain , test = cleaned_data.randomSplit([0.9998,0.002],seed=228)","user":"admin","dateUpdated":"2019-04-10T08:47:27+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557714_277325062","id":"20181120-145305_563969576","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:27+0000","dateFinished":"2019-04-10T08:47:27+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143393"},{"title":"8 - Rename the columns of the training and test sets","text":"%pyspark\n\nreplacements_train = {c:c + '_train' for c in train.columns}\nreplacements_test = {c:c + '_test' for c in test.columns}\n\ntrain = train.select([col(c).alias(replacements_train.get(c, c)) for c in train.columns])\ntest = test.select([col(c).alias(replacements_test.get(c, c)) for c in test.columns])\n\ntrain.printSchema()\ntest.printSchema()","user":"admin","dateUpdated":"2019-04-10T08:47:27+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557714_-730288710","id":"20181123-142708_1322241429","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:27+0000","dateFinished":"2019-04-10T08:47:28+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143394"},{"title":"9 - Calculate the Cartesian product","text":"%pyspark\n\ncartesian = train.crossJoin(test).cache()\ncartesian =  cartesian.withColumn('joint_id',monotonically_increasing_id())","user":"admin","dateUpdated":"2019-04-10T08:47:28+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8226"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1548408557714_1336039315","id":"20181120-145610_873155213","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:29+0000","dateFinished":"2019-04-10T08:47:32+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143395"},{"title":"10 - Calculate the distance between each pair of training and test instances","text":"%pyspark\n\nscored = cartesian.join(\n    cartesian.rdd.map(lambda x: (float(x['features_train'].dot(x['features_test'])/(x['norm_train'] * x['norm_test'])),x['joint_id'] )).toDF().withColumnRenamed('_2',\"joint_id\"),\n    on = 'joint_id'\n)","user":"admin","dateUpdated":"2019-04-10T08:47:32+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8227"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1548408557714_-1921037240","id":"20181123-144441_480570153","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:47:32+0000","dateFinished":"2019-04-10T08:48:28+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143396"},{"title":"11 - Remove all but the top K pairs for each point in the test set","text":"%pyspark\n\nwindow = Window.partitionBy(scored['id_test']).orderBy(scored['_1'].desc())\nK = 5\nk_nearest = scored.select(col('*'), row_number().over(window).alias('row_number')).where(col('row_number') <= K)","user":"admin","dateUpdated":"2019-04-10T08:48:28+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557714_712357651","id":"20181123-151751_768819202","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:48:36+0000","dateFinished":"2019-04-10T08:48:36+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143397"},{"title":"12 - Make a prediction","text":"%pyspark\n\npredictions = k_nearest.groupby('id_test').agg(mean('label_train').alias('raw_prediction'),mean('label_test').alias('label'))\nz.show(predictions)","user":"admin","dateUpdated":"2019-04-10T08:48:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"id_test":"string","raw_prediction":"string","label":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8228","http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8229","http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8230","http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8231","http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8232"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1548408557715_814156465","id":"20181123-152940_662095877","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:48:37+0000","dateFinished":"2019-04-10T08:56:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143398"},{"title":"13 - Round the average to get a discrete label","text":"%pyspark\n\npredictions = predictions.withColumn('prediction',round('raw_prediction')).cache()","user":"admin","dateUpdated":"2019-04-10T08:56:17+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"id_test":"string","raw_prediction":"string","label":"string","prediction":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557715_-1845382993","id":"20181123-154146_190076260","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:56:17+0000","dateFinished":"2019-04-10T08:56:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143399"},{"title":"14 - Create an MCE object and print out the F1 measure","text":"%pyspark\n\nevaluator = MCE()\nprint(evaluator.evaluate(predictions))\n","user":"admin","dateUpdated":"2019-04-10T08:56:17+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8233","http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8234","http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8235"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1548408557716_1998264812","id":"20181120-152222_1366950715","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T08:56:18+0000","dateFinished":"2019-04-10T09:01:58+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143400"},{"title":"15 - Visualize the predictions","text":"%pyspark\n\nz.show(predictions)","user":"admin","dateUpdated":"2019-04-10T09:01:58+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"id_test":"string","raw_prediction":"string","label":"string","prediction":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"scatterChart":{"xAxis":{"name":"id_test","index":0,"aggr":"sum"},"yAxis":{"name":"label","index":2,"aggr":"sum"},"group":{"name":"prediction","index":3,"aggr":"sum"}},"pieChart":{},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"keys":[{"name":"label","index":2,"aggr":"avg"}],"groups":[{"name":"id_test","index":0,"aggr":"sum"}],"values":[{"name":"prediction","index":3,"aggr":"avg"}],"commonSetting":{}},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8236","http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8237","http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8238","http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8239","http://ip-172-31-1-200.eu-central-1.compute.internal:4040/jobs/job?id=8240"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1548408557716_-992625840","id":"20181120-155137_1636863754","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T09:01:58+0000","dateFinished":"2019-04-10T09:02:02+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143401"},{"title":"Additional resources","text":"%md\nWe hope you've enjoyed this lab. Below are additional resources that you should find useful:\n\n1. [Hortonworks Apache Spark Tutorials](http://hortonworks.com/tutorials/#tuts-developers) are your natural next step where you can explore Spark in more depth.\n2. [Hortonworks Community Connection (HCC)](https://community.hortonworks.com/spaces/85/data-science.html?type=question) is a great resource for questions and answers on Spark, Data Analytics/Science, and many more Big Data topics.\n3. [Hortonworks Apache Spark Docs](https://docs.hortonworks.com/HDPDocuments/HDP3/HDP-3.0.1/spark-overview/content/analyzing_data_with_apache_spark.html) - official Spark documentation.\n4. [Hortonworks Apache Zeppelin Docs](https://docs.hortonworks.com/HDPDocuments/HDP3/HDP-3.0.1/zeppelin-overview/content/overview.html) - official Zeppelin documentation.","user":"admin","dateUpdated":"2019-04-10T09:02:02+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":10,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557716_328072216","id":"20181116-135131_93712280","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T09:02:02+0000","dateFinished":"2019-04-10T09:02:02+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143402"},{"text":"%angular\n</br>\n<center>\n<a href=\"https://learn.hortonworks.com/\">\n  <img src=\"https://everpath-course-content.s3-accelerate.amazonaws.com/instructor%2Ftbroas_hortonworks_c_bsns5k%2Fpublic%2Flogo-training-1.1494860458677.png\" alt=\"Hortonworks University\" style=\"width:125px;height:125px;border:0;\" align=\"middle\">\n</a>\n</center>","user":"admin","dateUpdated":"2019-04-10T09:02:02+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":2,"editorMode":"ace/mode/undefined","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557716_-1484834306","id":"20181115-083751_61749794","dateCreated":"2019-01-25T10:29:17+0000","dateStarted":"2019-04-10T09:02:02+0000","dateFinished":"2019-04-10T09:02:02+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143403"},{"text":"%angular\n","user":"admin","dateUpdated":"2019-04-10T09:02:02+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548408557736_723585697","id":"20181120-161222_1016896442","dateCreated":"2019-01-25T10:29:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:143404"}],"name":"Labs/K-NearestNeighbors","id":"2E4N8R6QG","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"python:shared_process":[],"angular:shared_process":[],"sh:shared_process":[],"spark2:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}